select 'act_ge_bytearray', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.DEPLOYMENT_ID_, '-') when coalesce(ff.DEPLOYMENT_ID_, '-') then 'true' else 'false' end as DEPLOYMENT_ID_ , case coalesce(f.BYTES_, '-') when coalesce(ff.BYTES_, '-') then 'true' else 'false' end as BYTES_ , case coalesce(f.GENERATED_, -1) when coalesce(ff.GENERATED_, -1) then 'true' else 'false' end as GENERATED_  from ( select * from lion_dw_tmp.activiti_pro_act_ge_bytearray where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_ge_bytearray where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.NAME_ = 'false' or filter.DEPLOYMENT_ID_ = 'false' or filter.BYTES_ = 'false' or filter.GENERATED_ = 'false' 
union
select 'act_ge_property', count(1) as diff from ( select  case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.VALUE_, '-') when coalesce(ff.VALUE_, '-') then 'true' else 'false' end as VALUE_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_  from ( select * from lion_dw_tmp.activiti_pro_act_ge_property where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_ge_property where dt = '2023-03-26') ff on  f.name_ = ff.name_ ) filter where  filter.NAME_ = 'false' or filter.VALUE_ = 'false' or filter.REV_ = 'false' 
union
select 'act_hi_actinst', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.PROC_DEF_ID_, '-') when coalesce(ff.PROC_DEF_ID_, '-') then 'true' else 'false' end as PROC_DEF_ID_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.EXECUTION_ID_, '-') when coalesce(ff.EXECUTION_ID_, '-') then 'true' else 'false' end as EXECUTION_ID_ , case coalesce(f.ACT_ID_, '-') when coalesce(ff.ACT_ID_, '-') then 'true' else 'false' end as ACT_ID_ , case coalesce(f.TASK_ID_, '-') when coalesce(ff.TASK_ID_, '-') then 'true' else 'false' end as TASK_ID_ , case coalesce(f.CALL_PROC_INST_ID_, '-') when coalesce(ff.CALL_PROC_INST_ID_, '-') then 'true' else 'false' end as CALL_PROC_INST_ID_ , case coalesce(f.ACT_NAME_, '-') when coalesce(ff.ACT_NAME_, '-') then 'true' else 'false' end as ACT_NAME_ , case coalesce(f.ACT_TYPE_, '-') when coalesce(ff.ACT_TYPE_, '-') then 'true' else 'false' end as ACT_TYPE_ , case coalesce(f.ASSIGNEE_, '-') when coalesce(ff.ASSIGNEE_, '-') then 'true' else 'false' end as ASSIGNEE_ , case coalesce(f.duration_, -1) when coalesce(ff.duration_, -1) then 'true' else 'false' end as duration_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_  from ( select * from lion_dw_tmp.activiti_pro_act_hi_actinst where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_hi_actinst where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.PROC_DEF_ID_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.EXECUTION_ID_ = 'false' or filter.ACT_ID_ = 'false' or filter.TASK_ID_ = 'false' or filter.CALL_PROC_INST_ID_ = 'false' or filter.ACT_NAME_ = 'false' or filter.ACT_TYPE_ = 'false' or filter.ASSIGNEE_ = 'false' or filter.duration_ = 'false' or filter.TENANT_ID_ = 'false' 
union
select 'act_hi_procinst', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.BUSINESS_KEY_, '-') when coalesce(ff.BUSINESS_KEY_, '-') then 'true' else 'false' end as BUSINESS_KEY_ , case coalesce(f.PROC_DEF_ID_, '-') when coalesce(ff.PROC_DEF_ID_, '-') then 'true' else 'false' end as PROC_DEF_ID_ , case coalesce(f.DURATION_, -1) when coalesce(ff.DURATION_, -1) then 'true' else 'false' end as DURATION_ , case coalesce(f.START_USER_ID_, '-') when coalesce(ff.START_USER_ID_, '-') then 'true' else 'false' end as START_USER_ID_ , case coalesce(f.START_ACT_ID_, '-') when coalesce(ff.START_ACT_ID_, '-') then 'true' else 'false' end as START_ACT_ID_ , case coalesce(f.END_ACT_ID_, '-') when coalesce(ff.END_ACT_ID_, '-') then 'true' else 'false' end as END_ACT_ID_ , case coalesce(f.SUPER_PROCESS_INSTANCE_ID_, '-') when coalesce(ff.SUPER_PROCESS_INSTANCE_ID_, '-') then 'true' else 'false' end as SUPER_PROCESS_INSTANCE_ID_ , case coalesce(f.DELETE_REASON_, '-') when coalesce(ff.DELETE_REASON_, '-') then 'true' else 'false' end as DELETE_REASON_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_  from ( select * from lion_dw_tmp.activiti_pro_act_hi_procinst where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_hi_procinst where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.BUSINESS_KEY_ = 'false' or filter.PROC_DEF_ID_ = 'false' or filter.DURATION_ = 'false' or filter.START_USER_ID_ = 'false' or filter.START_ACT_ID_ = 'false' or filter.END_ACT_ID_ = 'false' or filter.SUPER_PROCESS_INSTANCE_ID_ = 'false' or filter.DELETE_REASON_ = 'false' or filter.TENANT_ID_ = 'false' or filter.NAME_ = 'false' 
union
select 'act_hi_varinst', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.EXECUTION_ID_, '-') when coalesce(ff.EXECUTION_ID_, '-') then 'true' else 'false' end as EXECUTION_ID_ , case coalesce(f.TASK_ID_, '-') when coalesce(ff.TASK_ID_, '-') then 'true' else 'false' end as TASK_ID_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.VAR_TYPE_, '-') when coalesce(ff.VAR_TYPE_, '-') then 'true' else 'false' end as VAR_TYPE_ , case coalesce(f.rev_, -1) when coalesce(ff.rev_, -1) then 'true' else 'false' end as rev_ , case coalesce(f.BYTEARRAY_ID_, '-') when coalesce(ff.BYTEARRAY_ID_, '-') then 'true' else 'false' end as BYTEARRAY_ID_ , case coalesce(f.double_, -1) when coalesce(ff.double_, -1) then 'true' else 'false' end as double_ , case coalesce(f.long_, -1) when coalesce(ff.long_, -1) then 'true' else 'false' end as long_ , case coalesce(f.TEXT_, '-') when coalesce(ff.TEXT_, '-') then 'true' else 'false' end as TEXT_ , case coalesce(f.TEXT2_, '-') when coalesce(ff.TEXT2_, '-') then 'true' else 'false' end as TEXT2_  from ( select * from lion_dw_tmp.activiti_pro_act_hi_varinst where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_hi_varinst where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.EXECUTION_ID_ = 'false' or filter.TASK_ID_ = 'false' or filter.NAME_ = 'false' or filter.VAR_TYPE_ = 'false' or filter.rev_ = 'false' or filter.BYTEARRAY_ID_ = 'false' or filter.double_ = 'false' or filter.long_ = 'false' or filter.TEXT_ = 'false' or filter.TEXT2_ = 'false' 
union
select 'act_re_deployment', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.CATEGORY_, '-') when coalesce(ff.CATEGORY_, '-') then 'true' else 'false' end as CATEGORY_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_  from ( select * from lion_dw_tmp.activiti_pro_act_re_deployment where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_re_deployment where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.NAME_ = 'false' or filter.CATEGORY_ = 'false' or filter.TENANT_ID_ = 'false' 
union
select 'act_re_model', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.KEY_, '-') when coalesce(ff.KEY_, '-') then 'true' else 'false' end as KEY_ , case coalesce(f.CATEGORY_, '-') when coalesce(ff.CATEGORY_, '-') then 'true' else 'false' end as CATEGORY_ , case coalesce(f.VERSION_, -1) when coalesce(ff.VERSION_, -1) then 'true' else 'false' end as VERSION_ , case coalesce(f.META_INFO_, '-') when coalesce(ff.META_INFO_, '-') then 'true' else 'false' end as META_INFO_ , case coalesce(f.DEPLOYMENT_ID_, '-') when coalesce(ff.DEPLOYMENT_ID_, '-') then 'true' else 'false' end as DEPLOYMENT_ID_ , case coalesce(f.EDITOR_SOURCE_VALUE_ID_, '-') when coalesce(ff.EDITOR_SOURCE_VALUE_ID_, '-') then 'true' else 'false' end as EDITOR_SOURCE_VALUE_ID_ , case coalesce(f.EDITOR_SOURCE_EXTRA_VALUE_ID_, '-') when coalesce(ff.EDITOR_SOURCE_EXTRA_VALUE_ID_, '-') then 'true' else 'false' end as EDITOR_SOURCE_EXTRA_VALUE_ID_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_  from ( select * from lion_dw_tmp.activiti_pro_act_re_model where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_re_model where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.NAME_ = 'false' or filter.KEY_ = 'false' or filter.CATEGORY_ = 'false' or filter.VERSION_ = 'false' or filter.META_INFO_ = 'false' or filter.DEPLOYMENT_ID_ = 'false' or filter.EDITOR_SOURCE_VALUE_ID_ = 'false' or filter.EDITOR_SOURCE_EXTRA_VALUE_ID_ = 'false' or filter.TENANT_ID_ = 'false' 
union
select 'act_re_procdef', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.CATEGORY_, '-') when coalesce(ff.CATEGORY_, '-') then 'true' else 'false' end as CATEGORY_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.KEY_, '-') when coalesce(ff.KEY_, '-') then 'true' else 'false' end as KEY_ , case coalesce(f.VERSION_, -1) when coalesce(ff.VERSION_, -1) then 'true' else 'false' end as VERSION_ , case coalesce(f.DEPLOYMENT_ID_, '-') when coalesce(ff.DEPLOYMENT_ID_, '-') then 'true' else 'false' end as DEPLOYMENT_ID_ , case coalesce(f.RESOURCE_NAME_, '-') when coalesce(ff.RESOURCE_NAME_, '-') then 'true' else 'false' end as RESOURCE_NAME_ , case coalesce(f.DGRM_RESOURCE_NAME_, '-') when coalesce(ff.DGRM_RESOURCE_NAME_, '-') then 'true' else 'false' end as DGRM_RESOURCE_NAME_ , case coalesce(f.DESCRIPTION_, '-') when coalesce(ff.DESCRIPTION_, '-') then 'true' else 'false' end as DESCRIPTION_ , case coalesce(f.HAS_START_FORM_KEY_, -1) when coalesce(ff.HAS_START_FORM_KEY_, -1) then 'true' else 'false' end as HAS_START_FORM_KEY_ , case coalesce(f.HAS_GRAPHICAL_NOTATION_, -1) when coalesce(ff.HAS_GRAPHICAL_NOTATION_, -1) then 'true' else 'false' end as HAS_GRAPHICAL_NOTATION_ , case coalesce(f.SUSPENSION_STATE_, -1) when coalesce(ff.SUSPENSION_STATE_, -1) then 'true' else 'false' end as SUSPENSION_STATE_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_  from ( select * from lion_dw_tmp.activiti_pro_act_re_procdef where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_re_procdef where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.CATEGORY_ = 'false' or filter.NAME_ = 'false' or filter.KEY_ = 'false' or filter.VERSION_ = 'false' or filter.DEPLOYMENT_ID_ = 'false' or filter.RESOURCE_NAME_ = 'false' or filter.DGRM_RESOURCE_NAME_ = 'false' or filter.DESCRIPTION_ = 'false' or filter.HAS_START_FORM_KEY_ = 'false' or filter.HAS_GRAPHICAL_NOTATION_ = 'false' or filter.SUSPENSION_STATE_ = 'false' or filter.TENANT_ID_ = 'false' 
union
select 'act_ru_execution', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.BUSINESS_KEY_, '-') when coalesce(ff.BUSINESS_KEY_, '-') then 'true' else 'false' end as BUSINESS_KEY_ , case coalesce(f.PARENT_ID_, '-') when coalesce(ff.PARENT_ID_, '-') then 'true' else 'false' end as PARENT_ID_ , case coalesce(f.PROC_DEF_ID_, '-') when coalesce(ff.PROC_DEF_ID_, '-') then 'true' else 'false' end as PROC_DEF_ID_ , case coalesce(f.SUPER_EXEC_, '-') when coalesce(ff.SUPER_EXEC_, '-') then 'true' else 'false' end as SUPER_EXEC_ , case coalesce(f.ACT_ID_, '-') when coalesce(ff.ACT_ID_, '-') then 'true' else 'false' end as ACT_ID_ , case coalesce(f.IS_ACTIVE_, -1) when coalesce(ff.IS_ACTIVE_, -1) then 'true' else 'false' end as IS_ACTIVE_ , case coalesce(f.IS_CONCURRENT_, -1) when coalesce(ff.IS_CONCURRENT_, -1) then 'true' else 'false' end as IS_CONCURRENT_ , case coalesce(f.IS_SCOPE_, -1) when coalesce(ff.IS_SCOPE_, -1) then 'true' else 'false' end as IS_SCOPE_ , case coalesce(f.IS_EVENT_SCOPE_, -1) when coalesce(ff.IS_EVENT_SCOPE_, -1) then 'true' else 'false' end as IS_EVENT_SCOPE_ , case coalesce(f.SUSPENSION_STATE_, -1) when coalesce(ff.SUSPENSION_STATE_, -1) then 'true' else 'false' end as SUSPENSION_STATE_ , case coalesce(f.CACHED_ENT_STATE_, -1) when coalesce(ff.CACHED_ENT_STATE_, -1) then 'true' else 'false' end as CACHED_ENT_STATE_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_  from ( select * from lion_dw_tmp.activiti_pro_act_ru_execution where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_ru_execution where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.BUSINESS_KEY_ = 'false' or filter.PARENT_ID_ = 'false' or filter.PROC_DEF_ID_ = 'false' or filter.SUPER_EXEC_ = 'false' or filter.ACT_ID_ = 'false' or filter.IS_ACTIVE_ = 'false' or filter.IS_CONCURRENT_ = 'false' or filter.IS_SCOPE_ = 'false' or filter.IS_EVENT_SCOPE_ = 'false' or filter.SUSPENSION_STATE_ = 'false' or filter.CACHED_ENT_STATE_ = 'false' or filter.TENANT_ID_ = 'false' or filter.NAME_ = 'false' 
union
select 'act_ru_identitylink', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.GROUP_ID_, '-') when coalesce(ff.GROUP_ID_, '-') then 'true' else 'false' end as GROUP_ID_ , case coalesce(f.TYPE_, '-') when coalesce(ff.TYPE_, '-') then 'true' else 'false' end as TYPE_ , case coalesce(f.USER_ID_, '-') when coalesce(ff.USER_ID_, '-') then 'true' else 'false' end as USER_ID_ , case coalesce(f.TASK_ID_, '-') when coalesce(ff.TASK_ID_, '-') then 'true' else 'false' end as TASK_ID_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.PROC_DEF_ID_, '-') when coalesce(ff.PROC_DEF_ID_, '-') then 'true' else 'false' end as PROC_DEF_ID_  from ( select * from lion_dw_tmp.activiti_pro_act_ru_identitylink where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_ru_identitylink where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.GROUP_ID_ = 'false' or filter.TYPE_ = 'false' or filter.USER_ID_ = 'false' or filter.TASK_ID_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.PROC_DEF_ID_ = 'false' 
union
select 'act_ru_task', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.EXECUTION_ID_, '-') when coalesce(ff.EXECUTION_ID_, '-') then 'true' else 'false' end as EXECUTION_ID_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.PROC_DEF_ID_, '-') when coalesce(ff.PROC_DEF_ID_, '-') then 'true' else 'false' end as PROC_DEF_ID_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.PARENT_TASK_ID_, '-') when coalesce(ff.PARENT_TASK_ID_, '-') then 'true' else 'false' end as PARENT_TASK_ID_ , case coalesce(f.DESCRIPTION_, '-') when coalesce(ff.DESCRIPTION_, '-') then 'true' else 'false' end as DESCRIPTION_ , case coalesce(f.TASK_DEF_KEY_, '-') when coalesce(ff.TASK_DEF_KEY_, '-') then 'true' else 'false' end as TASK_DEF_KEY_ , case coalesce(f.OWNER_, '-') when coalesce(ff.OWNER_, '-') then 'true' else 'false' end as OWNER_ , case coalesce(f.ASSIGNEE_, '-') when coalesce(ff.ASSIGNEE_, '-') then 'true' else 'false' end as ASSIGNEE_ , case coalesce(f.DELEGATION_, '-') when coalesce(ff.DELEGATION_, '-') then 'true' else 'false' end as DELEGATION_ , case coalesce(f.PRIORITY_, -1) when coalesce(ff.PRIORITY_, -1) then 'true' else 'false' end as PRIORITY_ , case coalesce(f.CATEGORY_, '-') when coalesce(ff.CATEGORY_, '-') then 'true' else 'false' end as CATEGORY_ , case coalesce(f.SUSPENSION_STATE_, -1) when coalesce(ff.SUSPENSION_STATE_, -1) then 'true' else 'false' end as SUSPENSION_STATE_ , case coalesce(f.TENANT_ID_, '-') when coalesce(ff.TENANT_ID_, '-') then 'true' else 'false' end as TENANT_ID_ , case coalesce(f.FORM_KEY_, '-') when coalesce(ff.FORM_KEY_, '-') then 'true' else 'false' end as FORM_KEY_  from ( select * from lion_dw_tmp.activiti_pro_act_ru_task where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_ru_task where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.EXECUTION_ID_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.PROC_DEF_ID_ = 'false' or filter.NAME_ = 'false' or filter.PARENT_TASK_ID_ = 'false' or filter.DESCRIPTION_ = 'false' or filter.TASK_DEF_KEY_ = 'false' or filter.OWNER_ = 'false' or filter.ASSIGNEE_ = 'false' or filter.DELEGATION_ = 'false' or filter.PRIORITY_ = 'false' or filter.CATEGORY_ = 'false' or filter.SUSPENSION_STATE_ = 'false' or filter.TENANT_ID_ = 'false' or filter.FORM_KEY_ = 'false' 
union
select 'act_ru_variable', count(1) as diff from ( select  case coalesce(f.ID_, '-') when coalesce(ff.ID_, '-') then 'true' else 'false' end as ID_ , case coalesce(f.REV_, -1) when coalesce(ff.REV_, -1) then 'true' else 'false' end as REV_ , case coalesce(f.TYPE_, '-') when coalesce(ff.TYPE_, '-') then 'true' else 'false' end as TYPE_ , case coalesce(f.NAME_, '-') when coalesce(ff.NAME_, '-') then 'true' else 'false' end as NAME_ , case coalesce(f.EXECUTION_ID_, '-') when coalesce(ff.EXECUTION_ID_, '-') then 'true' else 'false' end as EXECUTION_ID_ , case coalesce(f.PROC_INST_ID_, '-') when coalesce(ff.PROC_INST_ID_, '-') then 'true' else 'false' end as PROC_INST_ID_ , case coalesce(f.TASK_ID_, '-') when coalesce(ff.TASK_ID_, '-') then 'true' else 'false' end as TASK_ID_ , case coalesce(f.BYTEARRAY_ID_, '-') when coalesce(ff.BYTEARRAY_ID_, '-') then 'true' else 'false' end as BYTEARRAY_ID_ , case coalesce(f.DOUBLE_, -1) when coalesce(ff.DOUBLE_, -1) then 'true' else 'false' end as DOUBLE_ , case coalesce(f.LONG_, -1) when coalesce(ff.LONG_, -1) then 'true' else 'false' end as LONG_ , case coalesce(f.TEXT_, '-') when coalesce(ff.TEXT_, '-') then 'true' else 'false' end as TEXT_ , case coalesce(f.TEXT2_, '-') when coalesce(ff.TEXT2_, '-') then 'true' else 'false' end as TEXT2_  from ( select * from lion_dw_tmp.activiti_pro_act_ru_variable where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_act_ru_variable where dt = '2023-03-26') ff on  f.id_ = ff.id_ ) filter where  filter.ID_ = 'false' or filter.REV_ = 'false' or filter.TYPE_ = 'false' or filter.NAME_ = 'false' or filter.EXECUTION_ID_ = 'false' or filter.PROC_INST_ID_ = 'false' or filter.TASK_ID_ = 'false' or filter.BYTEARRAY_ID_ = 'false' or filter.DOUBLE_ = 'false' or filter.LONG_ = 'false' or filter.TEXT_ = 'false' or filter.TEXT2_ = 'false' 
union
select 'own_hi_delegate_config', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_KEY, '-') when coalesce(ff.PROC_DEF_KEY, '-') then 'true' else 'false' end as PROC_DEF_KEY , case coalesce(f.OWNER, '-') when coalesce(ff.OWNER, '-') then 'true' else 'false' end as OWNER , case coalesce(f.ASSIGNEE, '-') when coalesce(ff.ASSIGNEE, '-') then 'true' else 'false' end as ASSIGNEE , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.ORIGIN_OWNER, '-') when coalesce(ff.ORIGIN_OWNER, '-') then 'true' else 'false' end as ORIGIN_OWNER , case coalesce(f.ASSIGNEE_NAME, '-') when coalesce(ff.ASSIGNEE_NAME, '-') then 'true' else 'false' end as ASSIGNEE_NAME , case coalesce(f.OWNER_NAME, '-') when coalesce(ff.OWNER_NAME, '-') then 'true' else 'false' end as OWNER_NAME  from ( select * from lion_dw_tmp.activiti_pro_own_hi_delegate_config where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_hi_delegate_config where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_KEY = 'false' or filter.OWNER = 'false' or filter.ASSIGNEE = 'false' or filter.TENANT_ID = 'false' or filter.ORIGIN_OWNER = 'false' or filter.ASSIGNEE_NAME = 'false' or filter.OWNER_NAME = 'false' 
union
select 'own_hi_process', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_INST_ID, '-') when coalesce(ff.PROC_INST_ID, '-') then 'true' else 'false' end as PROC_INST_ID , case coalesce(f.PROCESS_NAME, '-') when coalesce(ff.PROCESS_NAME, '-') then 'true' else 'false' end as PROCESS_NAME , case coalesce(f.ORG_CODE, '-') when coalesce(ff.ORG_CODE, '-') then 'true' else 'false' end as ORG_CODE , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.INITIATOR, '-') when coalesce(ff.INITIATOR, '-') then 'true' else 'false' end as INITIATOR , case coalesce(f.STATUS, '-') when coalesce(ff.STATUS, '-') then 'true' else 'false' end as STATUS , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.BUSINESS_KEY, '-') when coalesce(ff.BUSINESS_KEY, '-') then 'true' else 'false' end as BUSINESS_KEY , case coalesce(f.PROC_DEF_KEY, '-') when coalesce(ff.PROC_DEF_KEY, '-') then 'true' else 'false' end as PROC_DEF_KEY , case coalesce(f.duration, -1) when coalesce(ff.duration, -1) then 'true' else 'false' end as duration , case coalesce(f.DURATION_STR, '-') when coalesce(ff.DURATION_STR, '-') then 'true' else 'false' end as DURATION_STR , case coalesce(f.BUSINESS_TYPE, '-') when coalesce(ff.BUSINESS_TYPE, '-') then 'true' else 'false' end as BUSINESS_TYPE , case coalesce(f.INITIATOR_NAME, '-') when coalesce(ff.INITIATOR_NAME, '-') then 'true' else 'false' end as INITIATOR_NAME , case coalesce(f.PROC_INST_CODE, '-') when coalesce(ff.PROC_INST_CODE, '-') then 'true' else 'false' end as PROC_INST_CODE , case coalesce(f.CUSTOMER_CODE, '-') when coalesce(ff.CUSTOMER_CODE, '-') then 'true' else 'false' end as CUSTOMER_CODE , case coalesce(f.CUSTOMER_NAME, '-') when coalesce(ff.CUSTOMER_NAME, '-') then 'true' else 'false' end as CUSTOMER_NAME , case coalesce(f.prj_id, -1) when coalesce(ff.prj_id, -1) then 'true' else 'false' end as prj_id , case coalesce(f.PAYLIST_CODE, '-') when coalesce(ff.PAYLIST_CODE, '-') then 'true' else 'false' end as PAYLIST_CODE , case coalesce(f.BATCH_NO, '-') when coalesce(ff.BATCH_NO, '-') then 'true' else 'false' end as BATCH_NO , case coalesce(f.PRIORITY, '-') when coalesce(ff.PRIORITY, '-') then 'true' else 'false' end as PRIORITY , case coalesce(f.priority_code, -1) when coalesce(ff.priority_code, -1) then 'true' else 'false' end as priority_code , case coalesce(f.SUPER_PROCESS_INSTANCE_ID, '-') when coalesce(ff.SUPER_PROCESS_INSTANCE_ID, '-') then 'true' else 'false' end as SUPER_PROCESS_INSTANCE_ID , case coalesce(f.DURATION_BAK, '-') when coalesce(ff.DURATION_BAK, '-') then 'true' else 'false' end as DURATION_BAK , case coalesce(f.duration_number, -1) when coalesce(ff.duration_number, -1) then 'true' else 'false' end as duration_number  from ( select * from lion_dw_tmp.activiti_pro_own_hi_process where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_hi_process where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.PROC_INST_ID = 'false' or filter.PROCESS_NAME = 'false' or filter.ORG_CODE = 'false' or filter.DESCRIPTION = 'false' or filter.INITIATOR = 'false' or filter.STATUS = 'false' or filter.TENANT_ID = 'false' or filter.BUSINESS_KEY = 'false' or filter.PROC_DEF_KEY = 'false' or filter.duration = 'false' or filter.DURATION_STR = 'false' or filter.BUSINESS_TYPE = 'false' or filter.INITIATOR_NAME = 'false' or filter.PROC_INST_CODE = 'false' or filter.CUSTOMER_CODE = 'false' or filter.CUSTOMER_NAME = 'false' or filter.prj_id = 'false' or filter.PAYLIST_CODE = 'false' or filter.BATCH_NO = 'false' or filter.PRIORITY = 'false' or filter.priority_code = 'false' or filter.SUPER_PROCESS_INSTANCE_ID = 'false' or filter.DURATION_BAK = 'false' or filter.duration_number = 'false' 
union
select 'own_hi_process_final', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_INST_ID, '-') when coalesce(ff.PROC_INST_ID, '-') then 'true' else 'false' end as PROC_INST_ID , case coalesce(f.PROCESS_NAME, '-') when coalesce(ff.PROCESS_NAME, '-') then 'true' else 'false' end as PROCESS_NAME , case coalesce(f.ORG_CODE, '-') when coalesce(ff.ORG_CODE, '-') then 'true' else 'false' end as ORG_CODE , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.INITIATOR, '-') when coalesce(ff.INITIATOR, '-') then 'true' else 'false' end as INITIATOR , case coalesce(f.STATUS, '-') when coalesce(ff.STATUS, '-') then 'true' else 'false' end as STATUS , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.BUSINESS_KEY, '-') when coalesce(ff.BUSINESS_KEY, '-') then 'true' else 'false' end as BUSINESS_KEY , case coalesce(f.PROC_DEF_KEY, '-') when coalesce(ff.PROC_DEF_KEY, '-') then 'true' else 'false' end as PROC_DEF_KEY , case coalesce(f.DURATION_STR, '-') when coalesce(ff.DURATION_STR, '-') then 'true' else 'false' end as DURATION_STR , case coalesce(f.BUSINESS_TYPE, '-') when coalesce(ff.BUSINESS_TYPE, '-') then 'true' else 'false' end as BUSINESS_TYPE , case coalesce(f.INITIATOR_NAME, '-') when coalesce(ff.INITIATOR_NAME, '-') then 'true' else 'false' end as INITIATOR_NAME , case coalesce(f.PROC_INST_CODE, '-') when coalesce(ff.PROC_INST_CODE, '-') then 'true' else 'false' end as PROC_INST_CODE , case coalesce(f.CUSTOMER_CODE, '-') when coalesce(ff.CUSTOMER_CODE, '-') then 'true' else 'false' end as CUSTOMER_CODE , case coalesce(f.CUSTOMER_NAME, '-') when coalesce(ff.CUSTOMER_NAME, '-') then 'true' else 'false' end as CUSTOMER_NAME , case coalesce(f.prj_id, -1) when coalesce(ff.prj_id, -1) then 'true' else 'false' end as prj_id , case coalesce(f.PAYLIST_CODE, '-') when coalesce(ff.PAYLIST_CODE, '-') then 'true' else 'false' end as PAYLIST_CODE , case coalesce(f.BATCH_NO, '-') when coalesce(ff.BATCH_NO, '-') then 'true' else 'false' end as BATCH_NO , case coalesce(f.PRIORITY, '-') when coalesce(ff.PRIORITY, '-') then 'true' else 'false' end as PRIORITY , case coalesce(f.priority_code, -1) when coalesce(ff.priority_code, -1) then 'true' else 'false' end as priority_code , case coalesce(f.SUPER_PROCESS_INSTANCE_ID, '-') when coalesce(ff.SUPER_PROCESS_INSTANCE_ID, '-') then 'true' else 'false' end as SUPER_PROCESS_INSTANCE_ID , case coalesce(f.duration, -1) when coalesce(ff.duration, -1) then 'true' else 'false' end as duration  from ( select * from lion_dw_tmp.activiti_pro_own_hi_process_final where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_hi_process_final where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.PROC_INST_ID = 'false' or filter.PROCESS_NAME = 'false' or filter.ORG_CODE = 'false' or filter.DESCRIPTION = 'false' or filter.INITIATOR = 'false' or filter.STATUS = 'false' or filter.TENANT_ID = 'false' or filter.BUSINESS_KEY = 'false' or filter.PROC_DEF_KEY = 'false' or filter.DURATION_STR = 'false' or filter.BUSINESS_TYPE = 'false' or filter.INITIATOR_NAME = 'false' or filter.PROC_INST_CODE = 'false' or filter.CUSTOMER_CODE = 'false' or filter.CUSTOMER_NAME = 'false' or filter.prj_id = 'false' or filter.PAYLIST_CODE = 'false' or filter.BATCH_NO = 'false' or filter.PRIORITY = 'false' or filter.priority_code = 'false' or filter.SUPER_PROCESS_INSTANCE_ID = 'false' or filter.duration = 'false' 
union
select 'own_hi_task', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_INST_ID, '-') when coalesce(ff.PROC_INST_ID, '-') then 'true' else 'false' end as PROC_INST_ID , case coalesce(f.EXECUTION_ID, '-') when coalesce(ff.EXECUTION_ID, '-') then 'true' else 'false' end as EXECUTION_ID , case coalesce(f.PARENT_TASK_ID, '-') when coalesce(ff.PARENT_TASK_ID, '-') then 'true' else 'false' end as PARENT_TASK_ID , case coalesce(f.TASK_ID, '-') when coalesce(ff.TASK_ID, '-') then 'true' else 'false' end as TASK_ID , case coalesce(f.TASK_DEF_KEY, '-') when coalesce(ff.TASK_DEF_KEY, '-') then 'true' else 'false' end as TASK_DEF_KEY , case coalesce(f.TASK_TYPE, '-') when coalesce(ff.TASK_TYPE, '-') then 'true' else 'false' end as TASK_TYPE , case coalesce(f.NAME, '-') when coalesce(ff.NAME, '-') then 'true' else 'false' end as NAME , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.ASSIGNEE, '-') when coalesce(ff.ASSIGNEE, '-') then 'true' else 'false' end as ASSIGNEE , case coalesce(f.OWNER, '-') when coalesce(ff.OWNER, '-') then 'true' else 'false' end as OWNER , case coalesce(f.STATUS, '-') when coalesce(ff.STATUS, '-') then 'true' else 'false' end as STATUS , case coalesce(f.DURATION_STR, '-') when coalesce(ff.DURATION_STR, '-') then 'true' else 'false' end as DURATION_STR , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.FORM_KEY, '-') when coalesce(ff.FORM_KEY, '-') then 'true' else 'false' end as FORM_KEY , case coalesce(f.CANDIDATE_USERS, '-') when coalesce(ff.CANDIDATE_USERS, '-') then 'true' else 'false' end as CANDIDATE_USERS , case coalesce(f.OUTGOING_FLOW, '-') when coalesce(ff.OUTGOING_FLOW, '-') then 'true' else 'false' end as OUTGOING_FLOW , case coalesce(f.activity_type, '-') when coalesce(ff.activity_type, '-') then 'true' else 'false' end as activity_type , case coalesce(f.duration, -1) when coalesce(ff.duration, -1) then 'true' else 'false' end as duration , case coalesce(f.task_action, '-') when coalesce(ff.task_action, '-') then 'true' else 'false' end as task_action , case coalesce(f.DESCRIPTION_NAME, '-') when coalesce(ff.DESCRIPTION_NAME, '-') then 'true' else 'false' end as DESCRIPTION_NAME , case coalesce(f.PRE_TASK_ID, '-') when coalesce(ff.PRE_TASK_ID, '-') then 'true' else 'false' end as PRE_TASK_ID , case coalesce(f.BATCH_NO, '-') when coalesce(ff.BATCH_NO, '-') then 'true' else 'false' end as BATCH_NO , case coalesce(f.flow, -1) when coalesce(ff.flow, -1) then 'true' else 'false' end as flow , case coalesce(f.ASSIGNEE_NAME, '-') when coalesce(ff.ASSIGNEE_NAME, '-') then 'true' else 'false' end as ASSIGNEE_NAME , case coalesce(f.OWNER_NAME, '-') when coalesce(ff.OWNER_NAME, '-') then 'true' else 'false' end as OWNER_NAME  from ( select * from lion_dw_tmp.activiti_pro_own_hi_task where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_hi_task where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.PROC_INST_ID = 'false' or filter.EXECUTION_ID = 'false' or filter.PARENT_TASK_ID = 'false' or filter.TASK_ID = 'false' or filter.TASK_DEF_KEY = 'false' or filter.TASK_TYPE = 'false' or filter.NAME = 'false' or filter.DESCRIPTION = 'false' or filter.ASSIGNEE = 'false' or filter.OWNER = 'false' or filter.STATUS = 'false' or filter.DURATION_STR = 'false' or filter.TENANT_ID = 'false' or filter.FORM_KEY = 'false' or filter.CANDIDATE_USERS = 'false' or filter.OUTGOING_FLOW = 'false' or filter.activity_type = 'false' or filter.duration = 'false' or filter.task_action = 'false' or filter.DESCRIPTION_NAME = 'false' or filter.PRE_TASK_ID = 'false' or filter.BATCH_NO = 'false' or filter.flow = 'false' or filter.ASSIGNEE_NAME = 'false' or filter.OWNER_NAME = 'false' 
union
select 'own_hi_task_final', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_INST_ID, '-') when coalesce(ff.PROC_INST_ID, '-') then 'true' else 'false' end as PROC_INST_ID , case coalesce(f.EXECUTION_ID, '-') when coalesce(ff.EXECUTION_ID, '-') then 'true' else 'false' end as EXECUTION_ID , case coalesce(f.PARENT_TASK_ID, '-') when coalesce(ff.PARENT_TASK_ID, '-') then 'true' else 'false' end as PARENT_TASK_ID , case coalesce(f.TASK_ID, '-') when coalesce(ff.TASK_ID, '-') then 'true' else 'false' end as TASK_ID , case coalesce(f.TASK_DEF_KEY, '-') when coalesce(ff.TASK_DEF_KEY, '-') then 'true' else 'false' end as TASK_DEF_KEY , case coalesce(f.TASK_TYPE, '-') when coalesce(ff.TASK_TYPE, '-') then 'true' else 'false' end as TASK_TYPE , case coalesce(f.NAME, '-') when coalesce(ff.NAME, '-') then 'true' else 'false' end as NAME , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.ASSIGNEE, '-') when coalesce(ff.ASSIGNEE, '-') then 'true' else 'false' end as ASSIGNEE , case coalesce(f.OWNER, '-') when coalesce(ff.OWNER, '-') then 'true' else 'false' end as OWNER , case coalesce(f.STATUS, '-') when coalesce(ff.STATUS, '-') then 'true' else 'false' end as STATUS , case coalesce(f.DURATION_STR, '-') when coalesce(ff.DURATION_STR, '-') then 'true' else 'false' end as DURATION_STR , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.FORM_KEY, '-') when coalesce(ff.FORM_KEY, '-') then 'true' else 'false' end as FORM_KEY , case coalesce(f.CANDIDATE_USERS, '-') when coalesce(ff.CANDIDATE_USERS, '-') then 'true' else 'false' end as CANDIDATE_USERS , case coalesce(f.OUTGOING_FLOW, '-') when coalesce(ff.OUTGOING_FLOW, '-') then 'true' else 'false' end as OUTGOING_FLOW , case coalesce(f.activity_type, '-') when coalesce(ff.activity_type, '-') then 'true' else 'false' end as activity_type , case coalesce(f.duration, -1) when coalesce(ff.duration, -1) then 'true' else 'false' end as duration , case coalesce(f.task_action, '-') when coalesce(ff.task_action, '-') then 'true' else 'false' end as task_action , case coalesce(f.DESCRIPTION_NAME, '-') when coalesce(ff.DESCRIPTION_NAME, '-') then 'true' else 'false' end as DESCRIPTION_NAME , case coalesce(f.PRE_TASK_ID, '-') when coalesce(ff.PRE_TASK_ID, '-') then 'true' else 'false' end as PRE_TASK_ID , case coalesce(f.BATCH_NO, '-') when coalesce(ff.BATCH_NO, '-') then 'true' else 'false' end as BATCH_NO , case coalesce(f.flow, -1) when coalesce(ff.flow, -1) then 'true' else 'false' end as flow , case coalesce(f.ASSIGNEE_NAME, '-') when coalesce(ff.ASSIGNEE_NAME, '-') then 'true' else 'false' end as ASSIGNEE_NAME , case coalesce(f.OWNER_NAME, '-') when coalesce(ff.OWNER_NAME, '-') then 'true' else 'false' end as OWNER_NAME  from ( select * from lion_dw_tmp.activiti_pro_own_hi_task_final where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_hi_task_final where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.PROC_INST_ID = 'false' or filter.EXECUTION_ID = 'false' or filter.PARENT_TASK_ID = 'false' or filter.TASK_ID = 'false' or filter.TASK_DEF_KEY = 'false' or filter.TASK_TYPE = 'false' or filter.NAME = 'false' or filter.DESCRIPTION = 'false' or filter.ASSIGNEE = 'false' or filter.OWNER = 'false' or filter.STATUS = 'false' or filter.DURATION_STR = 'false' or filter.TENANT_ID = 'false' or filter.FORM_KEY = 'false' or filter.CANDIDATE_USERS = 'false' or filter.OUTGOING_FLOW = 'false' or filter.activity_type = 'false' or filter.duration = 'false' or filter.task_action = 'false' or filter.DESCRIPTION_NAME = 'false' or filter.PRE_TASK_ID = 'false' or filter.BATCH_NO = 'false' or filter.flow = 'false' or filter.ASSIGNEE_NAME = 'false' or filter.OWNER_NAME = 'false' 
union
select 'own_interface_log', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.TYPE, '-') when coalesce(ff.TYPE, '-') then 'true' else 'false' end as TYPE , case coalesce(f.PROCESS_DEF_KEY, '-') when coalesce(ff.PROCESS_DEF_KEY, '-') then 'true' else 'false' end as PROCESS_DEF_KEY , case coalesce(f.BUSINESS_KEY, '-') when coalesce(ff.BUSINESS_KEY, '-') then 'true' else 'false' end as BUSINESS_KEY , case coalesce(f.CODE, '-') when coalesce(ff.CODE, '-') then 'true' else 'false' end as CODE , case coalesce(f.status, '-') when coalesce(ff.status, '-') then 'true' else 'false' end as status , case coalesce(f.TASK_ID, '-') when coalesce(ff.TASK_ID, '-') then 'true' else 'false' end as TASK_ID , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID  from ( select * from lion_dw_tmp.activiti_pro_own_interface_log where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_interface_log where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.TYPE = 'false' or filter.PROCESS_DEF_KEY = 'false' or filter.BUSINESS_KEY = 'false' or filter.CODE = 'false' or filter.status = 'false' or filter.TASK_ID = 'false' or filter.TENANT_ID = 'false' 
union
select 'own_layoff_user', count(1) as diff from ( select  case coalesce(f.JOB_NO, '-') when coalesce(ff.JOB_NO, '-') then 'true' else 'false' end as JOB_NO , case coalesce(f.RL_NM, '-') when coalesce(ff.RL_NM, '-') then 'true' else 'false' end as RL_NM , case coalesce(f.USER_ID, '-') when coalesce(ff.USER_ID, '-') then 'true' else 'false' end as USER_ID , case coalesce(f.REC_JOB_NO, '-') when coalesce(ff.REC_JOB_NO, '-') then 'true' else 'false' end as REC_JOB_NO , case coalesce(f.REC_RL_NM, '-') when coalesce(ff.REC_RL_NM, '-') then 'true' else 'false' end as REC_RL_NM , case coalesce(f.REC_USER_ID, '-') when coalesce(ff.REC_USER_ID, '-') then 'true' else 'false' end as REC_USER_ID  from ( select * from lion_dw_tmp.activiti_pro_own_layoff_user where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_layoff_user where dt = '2023-03-26') ff on  f.user_id = ff.user_id ) filter where  filter.JOB_NO = 'false' or filter.RL_NM = 'false' or filter.USER_ID = 'false' or filter.REC_JOB_NO = 'false' or filter.REC_RL_NM = 'false' or filter.REC_USER_ID = 'false' 
union
select 'own_model_status', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.MODEL_ID, '-') when coalesce(ff.MODEL_ID, '-') then 'true' else 'false' end as MODEL_ID , case coalesce(f.ACCOUNT, '-') when coalesce(ff.ACCOUNT, '-') then 'true' else 'false' end as ACCOUNT , case coalesce(f.REAL_NAME, '-') when coalesce(ff.REAL_NAME, '-') then 'true' else 'false' end as REAL_NAME , case coalesce(f.status, -1) when coalesce(ff.status, -1) then 'true' else 'false' end as status  from ( select * from lion_dw_tmp.activiti_pro_own_model_status where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_model_status where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.MODEL_ID = 'false' or filter.ACCOUNT = 'false' or filter.REAL_NAME = 'false' or filter.status = 'false' 
union
select 'own_pro_model', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROCESS_KEY, '-') when coalesce(ff.PROCESS_KEY, '-') then 'true' else 'false' end as PROCESS_KEY , case coalesce(f.MODEL_KEY, '-') when coalesce(ff.MODEL_KEY, '-') then 'true' else 'false' end as MODEL_KEY , case coalesce(f.status, '-') when coalesce(ff.status, '-') then 'true' else 'false' end as status  from ( select * from lion_dw_tmp.activiti_pro_own_pro_model where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_pro_model where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROCESS_KEY = 'false' or filter.MODEL_KEY = 'false' or filter.status = 'false' 
union
select 'own_re_procdef', count(1) as diff from ( select  case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_DEF_KEY, '-') when coalesce(ff.PROC_DEF_KEY, '-') then 'true' else 'false' end as PROC_DEF_KEY , case coalesce(f.PROCESS_NAME, '-') when coalesce(ff.PROCESS_NAME, '-') then 'true' else 'false' end as PROCESS_NAME , case coalesce(f.version, -1) when coalesce(ff.version, -1) then 'true' else 'false' end as version , case coalesce(f.ACTIVITY_TYPE, '-') when coalesce(ff.ACTIVITY_TYPE, '-') then 'true' else 'false' end as ACTIVITY_TYPE , case coalesce(f.TASK_DEF_KEY, '-') when coalesce(ff.TASK_DEF_KEY, '-') then 'true' else 'false' end as TASK_DEF_KEY , case coalesce(f.TASK_NAME, '-') when coalesce(ff.TASK_NAME, '-') then 'true' else 'false' end as TASK_NAME , case coalesce(f.ASSIGNEE, '-') when coalesce(ff.ASSIGNEE, '-') then 'true' else 'false' end as ASSIGNEE , case coalesce(f.CANDIDATE_USERS, '-') when coalesce(ff.CANDIDATE_USERS, '-') then 'true' else 'false' end as CANDIDATE_USERS , case coalesce(f.CANDIDATE_GROUPS, '-') when coalesce(ff.CANDIDATE_GROUPS, '-') then 'true' else 'false' end as CANDIDATE_GROUPS , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID  from ( select * from lion_dw_tmp.activiti_pro_own_re_procdef where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_re_procdef where dt = '2023-03-26') ff on  f.proc_def_id = ff.proc_def_id and f.task_def_key = ff.task_def_key ) filter where  filter.PROC_DEF_ID = 'false' or filter.PROC_DEF_KEY = 'false' or filter.PROCESS_NAME = 'false' or filter.version = 'false' or filter.ACTIVITY_TYPE = 'false' or filter.TASK_DEF_KEY = 'false' or filter.TASK_NAME = 'false' or filter.ASSIGNEE = 'false' or filter.CANDIDATE_USERS = 'false' or filter.CANDIDATE_GROUPS = 'false' or filter.TENANT_ID = 'false' 
union
select 'own_ru_delegate_config', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_KEY, '-') when coalesce(ff.PROC_DEF_KEY, '-') then 'true' else 'false' end as PROC_DEF_KEY , case coalesce(f.OWNER, '-') when coalesce(ff.OWNER, '-') then 'true' else 'false' end as OWNER , case coalesce(f.ASSIGNEE, '-') when coalesce(ff.ASSIGNEE, '-') then 'true' else 'false' end as ASSIGNEE , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.ORIGIN_OWNER, '-') when coalesce(ff.ORIGIN_OWNER, '-') then 'true' else 'false' end as ORIGIN_OWNER , case coalesce(f.ASSIGNEE_NAME, '-') when coalesce(ff.ASSIGNEE_NAME, '-') then 'true' else 'false' end as ASSIGNEE_NAME , case coalesce(f.OWNER_NAME, '-') when coalesce(ff.OWNER_NAME, '-') then 'true' else 'false' end as OWNER_NAME  from ( select * from lion_dw_tmp.activiti_pro_own_ru_delegate_config where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_ru_delegate_config where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_KEY = 'false' or filter.OWNER = 'false' or filter.ASSIGNEE = 'false' or filter.TENANT_ID = 'false' or filter.ORIGIN_OWNER = 'false' or filter.ASSIGNEE_NAME = 'false' or filter.OWNER_NAME = 'false' 
union
select 'own_ru_process', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_INST_ID, '-') when coalesce(ff.PROC_INST_ID, '-') then 'true' else 'false' end as PROC_INST_ID , case coalesce(f.PROCESS_NAME, '-') when coalesce(ff.PROCESS_NAME, '-') then 'true' else 'false' end as PROCESS_NAME , case coalesce(f.ORG_CODE, '-') when coalesce(ff.ORG_CODE, '-') then 'true' else 'false' end as ORG_CODE , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.INITIATOR, '-') when coalesce(ff.INITIATOR, '-') then 'true' else 'false' end as INITIATOR , case coalesce(f.STATUS, '-') when coalesce(ff.STATUS, '-') then 'true' else 'false' end as STATUS , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.BUSINESS_KEY, '-') when coalesce(ff.BUSINESS_KEY, '-') then 'true' else 'false' end as BUSINESS_KEY , case coalesce(f.PROC_DEF_KEY, '-') when coalesce(ff.PROC_DEF_KEY, '-') then 'true' else 'false' end as PROC_DEF_KEY , case coalesce(f.duration, -1) when coalesce(ff.duration, -1) then 'true' else 'false' end as duration , case coalesce(f.DURATION_STR, '-') when coalesce(ff.DURATION_STR, '-') then 'true' else 'false' end as DURATION_STR , case coalesce(f.BUSINESS_TYPE, '-') when coalesce(ff.BUSINESS_TYPE, '-') then 'true' else 'false' end as BUSINESS_TYPE , case coalesce(f.INITIATOR_NAME, '-') when coalesce(ff.INITIATOR_NAME, '-') then 'true' else 'false' end as INITIATOR_NAME , case coalesce(f.PROC_INST_CODE, '-') when coalesce(ff.PROC_INST_CODE, '-') then 'true' else 'false' end as PROC_INST_CODE , case coalesce(f.CUSTOMER_CODE, '-') when coalesce(ff.CUSTOMER_CODE, '-') then 'true' else 'false' end as CUSTOMER_CODE , case coalesce(f.CUSTOMER_NAME, '-') when coalesce(ff.CUSTOMER_NAME, '-') then 'true' else 'false' end as CUSTOMER_NAME , case coalesce(f.prj_id, -1) when coalesce(ff.prj_id, -1) then 'true' else 'false' end as prj_id , case coalesce(f.PAYLIST_CODE, '-') when coalesce(ff.PAYLIST_CODE, '-') then 'true' else 'false' end as PAYLIST_CODE , case coalesce(f.BATCH_NO, '-') when coalesce(ff.BATCH_NO, '-') then 'true' else 'false' end as BATCH_NO , case coalesce(f.PRIORITY, '-') when coalesce(ff.PRIORITY, '-') then 'true' else 'false' end as PRIORITY , case coalesce(f.priority_code, -1) when coalesce(ff.priority_code, -1) then 'true' else 'false' end as priority_code , case coalesce(f.SUPER_PROCESS_INSTANCE_ID, '-') when coalesce(ff.SUPER_PROCESS_INSTANCE_ID, '-') then 'true' else 'false' end as SUPER_PROCESS_INSTANCE_ID  from ( select * from lion_dw_tmp.activiti_pro_own_ru_process where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_ru_process where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.PROC_INST_ID = 'false' or filter.PROCESS_NAME = 'false' or filter.ORG_CODE = 'false' or filter.DESCRIPTION = 'false' or filter.INITIATOR = 'false' or filter.STATUS = 'false' or filter.TENANT_ID = 'false' or filter.BUSINESS_KEY = 'false' or filter.PROC_DEF_KEY = 'false' or filter.duration = 'false' or filter.DURATION_STR = 'false' or filter.BUSINESS_TYPE = 'false' or filter.INITIATOR_NAME = 'false' or filter.PROC_INST_CODE = 'false' or filter.CUSTOMER_CODE = 'false' or filter.CUSTOMER_NAME = 'false' or filter.prj_id = 'false' or filter.PAYLIST_CODE = 'false' or filter.BATCH_NO = 'false' or filter.PRIORITY = 'false' or filter.priority_code = 'false' or filter.SUPER_PROCESS_INSTANCE_ID = 'false' 
union
select 'own_ru_task', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.PROC_INST_ID, '-') when coalesce(ff.PROC_INST_ID, '-') then 'true' else 'false' end as PROC_INST_ID , case coalesce(f.EXECUTION_ID, '-') when coalesce(ff.EXECUTION_ID, '-') then 'true' else 'false' end as EXECUTION_ID , case coalesce(f.PARENT_TASK_ID, '-') when coalesce(ff.PARENT_TASK_ID, '-') then 'true' else 'false' end as PARENT_TASK_ID , case coalesce(f.TASK_ID, '-') when coalesce(ff.TASK_ID, '-') then 'true' else 'false' end as TASK_ID , case coalesce(f.TASK_DEF_KEY, '-') when coalesce(ff.TASK_DEF_KEY, '-') then 'true' else 'false' end as TASK_DEF_KEY , case coalesce(f.TASK_TYPE, '-') when coalesce(ff.TASK_TYPE, '-') then 'true' else 'false' end as TASK_TYPE , case coalesce(f.NAME, '-') when coalesce(ff.NAME, '-') then 'true' else 'false' end as NAME , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.ASSIGNEE, '-') when coalesce(ff.ASSIGNEE, '-') then 'true' else 'false' end as ASSIGNEE , case coalesce(f.OWNER, '-') when coalesce(ff.OWNER, '-') then 'true' else 'false' end as OWNER , case coalesce(f.STATUS, '-') when coalesce(ff.STATUS, '-') then 'true' else 'false' end as STATUS , case coalesce(f.DURATION_STR, '-') when coalesce(ff.DURATION_STR, '-') then 'true' else 'false' end as DURATION_STR , case coalesce(f.TENANT_ID, '-') when coalesce(ff.TENANT_ID, '-') then 'true' else 'false' end as TENANT_ID , case coalesce(f.FORM_KEY, '-') when coalesce(ff.FORM_KEY, '-') then 'true' else 'false' end as FORM_KEY , case coalesce(f.CANDIDATE_USERS, '-') when coalesce(ff.CANDIDATE_USERS, '-') then 'true' else 'false' end as CANDIDATE_USERS , case coalesce(f.OUTGOING_FLOW, '-') when coalesce(ff.OUTGOING_FLOW, '-') then 'true' else 'false' end as OUTGOING_FLOW , case coalesce(f.activity_type, '-') when coalesce(ff.activity_type, '-') then 'true' else 'false' end as activity_type , case coalesce(f.duration, -1) when coalesce(ff.duration, -1) then 'true' else 'false' end as duration , case coalesce(f.task_action, '-') when coalesce(ff.task_action, '-') then 'true' else 'false' end as task_action , case coalesce(f.DESCRIPTION_NAME, '-') when coalesce(ff.DESCRIPTION_NAME, '-') then 'true' else 'false' end as DESCRIPTION_NAME , case coalesce(f.PRE_TASK_ID, '-') when coalesce(ff.PRE_TASK_ID, '-') then 'true' else 'false' end as PRE_TASK_ID , case coalesce(f.BATCH_NO, '-') when coalesce(ff.BATCH_NO, '-') then 'true' else 'false' end as BATCH_NO , case coalesce(f.flow, -1) when coalesce(ff.flow, -1) then 'true' else 'false' end as flow , case coalesce(f.ASSIGNEE_NAME, '-') when coalesce(ff.ASSIGNEE_NAME, '-') then 'true' else 'false' end as ASSIGNEE_NAME , case coalesce(f.OWNER_NAME, '-') when coalesce(ff.OWNER_NAME, '-') then 'true' else 'false' end as OWNER_NAME  from ( select * from lion_dw_tmp.activiti_pro_own_ru_task where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_ru_task where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.PROC_INST_ID = 'false' or filter.EXECUTION_ID = 'false' or filter.PARENT_TASK_ID = 'false' or filter.TASK_ID = 'false' or filter.TASK_DEF_KEY = 'false' or filter.TASK_TYPE = 'false' or filter.NAME = 'false' or filter.DESCRIPTION = 'false' or filter.ASSIGNEE = 'false' or filter.OWNER = 'false' or filter.STATUS = 'false' or filter.DURATION_STR = 'false' or filter.TENANT_ID = 'false' or filter.FORM_KEY = 'false' or filter.CANDIDATE_USERS = 'false' or filter.OUTGOING_FLOW = 'false' or filter.activity_type = 'false' or filter.duration = 'false' or filter.task_action = 'false' or filter.DESCRIPTION_NAME = 'false' or filter.PRE_TASK_ID = 'false' or filter.BATCH_NO = 'false' or filter.flow = 'false' or filter.ASSIGNEE_NAME = 'false' or filter.OWNER_NAME = 'false' 
union
select 'own_task_property', count(1) as diff from ( select  case coalesce(f.ID, '-') when coalesce(ff.ID, '-') then 'true' else 'false' end as ID , case coalesce(f.PROC_DEF_ID, '-') when coalesce(ff.PROC_DEF_ID, '-') then 'true' else 'false' end as PROC_DEF_ID , case coalesce(f.TASK_DEF_KEY, '-') when coalesce(ff.TASK_DEF_KEY, '-') then 'true' else 'false' end as TASK_DEF_KEY , case coalesce(f.ASSIGNABLE, '-') when coalesce(ff.ASSIGNABLE, '-') then 'true' else 'false' end as ASSIGNABLE , case coalesce(f.FORM_URL, '-') when coalesce(ff.FORM_URL, '-') then 'true' else 'false' end as FORM_URL , case coalesce(f.SEQUENCE_FLOW, '-') when coalesce(ff.SEQUENCE_FLOW, '-') then 'true' else 'false' end as SEQUENCE_FLOW , case coalesce(f.BEAN_NAME, '-') when coalesce(ff.BEAN_NAME, '-') then 'true' else 'false' end as BEAN_NAME , case coalesce(f.RELATION_TASK_KEY, '-') when coalesce(ff.RELATION_TASK_KEY, '-') then 'true' else 'false' end as RELATION_TASK_KEY , case coalesce(f.GROUP_SHARE, '-') when coalesce(ff.GROUP_SHARE, '-') then 'true' else 'false' end as GROUP_SHARE , case coalesce(f.LOCK_ASSIGNEE, '-') when coalesce(ff.LOCK_ASSIGNEE, '-') then 'true' else 'false' end as LOCK_ASSIGNEE , case coalesce(f.TABLE_AUTHORITY_CONFIG, '-') when coalesce(ff.TABLE_AUTHORITY_CONFIG, '-') then 'true' else 'false' end as TABLE_AUTHORITY_CONFIG , case coalesce(f.PARALLEL_GATEWAY_ID, '-') when coalesce(ff.PARALLEL_GATEWAY_ID, '-') then 'true' else 'false' end as PARALLEL_GATEWAY_ID , case coalesce(f.ROUTER_KEY, '-') when coalesce(ff.ROUTER_KEY, '-') then 'true' else 'false' end as ROUTER_KEY , case coalesce(f.EXT_PROPERTIES, '-') when coalesce(ff.EXT_PROPERTIES, '-') then 'true' else 'false' end as EXT_PROPERTIES  from ( select * from lion_dw_tmp.activiti_pro_own_task_property where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_task_property where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.ID = 'false' or filter.PROC_DEF_ID = 'false' or filter.TASK_DEF_KEY = 'false' or filter.ASSIGNABLE = 'false' or filter.FORM_URL = 'false' or filter.SEQUENCE_FLOW = 'false' or filter.BEAN_NAME = 'false' or filter.RELATION_TASK_KEY = 'false' or filter.GROUP_SHARE = 'false' or filter.LOCK_ASSIGNEE = 'false' or filter.TABLE_AUTHORITY_CONFIG = 'false' or filter.PARALLEL_GATEWAY_ID = 'false' or filter.ROUTER_KEY = 'false' or filter.EXT_PROPERTIES = 'false' 
union
select 'own_tenant', count(1) as diff from ( select  case coalesce(f.id, -1) when coalesce(ff.id, -1) then 'true' else 'false' end as id , case coalesce(f.CODE, '-') when coalesce(ff.CODE, '-') then 'true' else 'false' end as CODE , case coalesce(f.NAME, '-') when coalesce(ff.NAME, '-') then 'true' else 'false' end as NAME , case coalesce(f.status, '-') when coalesce(ff.status, '-') then 'true' else 'false' end as status , case coalesce(f.INF_BASE_URL, '-') when coalesce(ff.INF_BASE_URL, '-') then 'true' else 'false' end as INF_BASE_URL , case coalesce(f.FORM_BASE_URL, '-') when coalesce(ff.FORM_BASE_URL, '-') then 'true' else 'false' end as FORM_BASE_URL  from ( select * from lion_dw_tmp.activiti_pro_own_tenant where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_tenant where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.id = 'false' or filter.CODE = 'false' or filter.NAME = 'false' or filter.status = 'false' or filter.INF_BASE_URL = 'false' or filter.FORM_BASE_URL = 'false' 
union
select 'own_user', count(1) as diff from ( select  case coalesce(f.id, -1) when coalesce(ff.id, -1) then 'true' else 'false' end as id , case coalesce(f.ACCOUNT, '-') when coalesce(ff.ACCOUNT, '-') then 'true' else 'false' end as ACCOUNT , case coalesce(f.PASSWORD, '-') when coalesce(ff.PASSWORD, '-') then 'true' else 'false' end as PASSWORD , case coalesce(f.NICK_NAME, '-') when coalesce(ff.NICK_NAME, '-') then 'true' else 'false' end as NICK_NAME , case coalesce(f.REAL_NAME, '-') when coalesce(ff.REAL_NAME, '-') then 'true' else 'false' end as REAL_NAME , case coalesce(f.MOBILE, '-') when coalesce(ff.MOBILE, '-') then 'true' else 'false' end as MOBILE , case coalesce(f.EMAIL, '-') when coalesce(ff.EMAIL, '-') then 'true' else 'false' end as EMAIL , case coalesce(f.status, -1) when coalesce(ff.status, -1) then 'true' else 'false' end as status  from ( select * from lion_dw_tmp.activiti_pro_own_user where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_own_user where dt = '2023-03-26') ff on  f.id = ff.id ) filter where  filter.id = 'false' or filter.ACCOUNT = 'false' or filter.PASSWORD = 'false' or filter.NICK_NAME = 'false' or filter.REAL_NAME = 'false' or filter.MOBILE = 'false' or filter.EMAIL = 'false' or filter.status = 'false' 
union
select 'qrtz_cron_triggers', count(1) as diff from ( select  case coalesce(f.SCHED_NAME, '-') when coalesce(ff.SCHED_NAME, '-') then 'true' else 'false' end as SCHED_NAME , case coalesce(f.TRIGGER_NAME, '-') when coalesce(ff.TRIGGER_NAME, '-') then 'true' else 'false' end as TRIGGER_NAME , case coalesce(f.TRIGGER_GROUP, '-') when coalesce(ff.TRIGGER_GROUP, '-') then 'true' else 'false' end as TRIGGER_GROUP , case coalesce(f.CRON_EXPRESSION, '-') when coalesce(ff.CRON_EXPRESSION, '-') then 'true' else 'false' end as CRON_EXPRESSION , case coalesce(f.TIME_ZONE_ID, '-') when coalesce(ff.TIME_ZONE_ID, '-') then 'true' else 'false' end as TIME_ZONE_ID  from ( select * from lion_dw_tmp.activiti_pro_qrtz_cron_triggers where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_qrtz_cron_triggers where dt = '2023-03-26') ff on  f.sched_name = ff.sched_name and f.trigger_name = ff.trigger_name and f.trigger_group = ff.trigger_group ) filter where  filter.SCHED_NAME = 'false' or filter.TRIGGER_NAME = 'false' or filter.TRIGGER_GROUP = 'false' or filter.CRON_EXPRESSION = 'false' or filter.TIME_ZONE_ID = 'false' 
union
select 'qrtz_job_details', count(1) as diff from ( select  case coalesce(f.SCHED_NAME, '-') when coalesce(ff.SCHED_NAME, '-') then 'true' else 'false' end as SCHED_NAME , case coalesce(f.JOB_NAME, '-') when coalesce(ff.JOB_NAME, '-') then 'true' else 'false' end as JOB_NAME , case coalesce(f.JOB_GROUP, '-') when coalesce(ff.JOB_GROUP, '-') then 'true' else 'false' end as JOB_GROUP , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.JOB_CLASS_NAME, '-') when coalesce(ff.JOB_CLASS_NAME, '-') then 'true' else 'false' end as JOB_CLASS_NAME , case coalesce(f.IS_DURABLE, '-') when coalesce(ff.IS_DURABLE, '-') then 'true' else 'false' end as IS_DURABLE , case coalesce(f.IS_NONCONCURRENT, '-') when coalesce(ff.IS_NONCONCURRENT, '-') then 'true' else 'false' end as IS_NONCONCURRENT , case coalesce(f.IS_UPDATE_DATA, '-') when coalesce(ff.IS_UPDATE_DATA, '-') then 'true' else 'false' end as IS_UPDATE_DATA , case coalesce(f.REQUESTS_RECOVERY, '-') when coalesce(ff.REQUESTS_RECOVERY, '-') then 'true' else 'false' end as REQUESTS_RECOVERY , case coalesce(f.JOB_DATA, '-') when coalesce(ff.JOB_DATA, '-') then 'true' else 'false' end as JOB_DATA  from ( select * from lion_dw_tmp.activiti_pro_qrtz_job_details where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_qrtz_job_details where dt = '2023-03-26') ff on  f.sched_name = ff.sched_name and f.job_name = ff.job_name and f.job_group = ff.job_group ) filter where  filter.SCHED_NAME = 'false' or filter.JOB_NAME = 'false' or filter.JOB_GROUP = 'false' or filter.DESCRIPTION = 'false' or filter.JOB_CLASS_NAME = 'false' or filter.IS_DURABLE = 'false' or filter.IS_NONCONCURRENT = 'false' or filter.IS_UPDATE_DATA = 'false' or filter.REQUESTS_RECOVERY = 'false' or filter.JOB_DATA = 'false' 
union
select 'qrtz_locks', count(1) as diff from ( select  case coalesce(f.SCHED_NAME, '-') when coalesce(ff.SCHED_NAME, '-') then 'true' else 'false' end as SCHED_NAME , case coalesce(f.LOCK_NAME, '-') when coalesce(ff.LOCK_NAME, '-') then 'true' else 'false' end as LOCK_NAME  from ( select * from lion_dw_tmp.activiti_pro_qrtz_locks where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_qrtz_locks where dt = '2023-03-26') ff on  f.sched_name = ff.sched_name and f.lock_name = ff.lock_name ) filter where  filter.SCHED_NAME = 'false' or filter.LOCK_NAME = 'false' 
union
select 'qrtz_scheduler_state', count(1) as diff from ( select  case coalesce(f.SCHED_NAME, '-') when coalesce(ff.SCHED_NAME, '-') then 'true' else 'false' end as SCHED_NAME , case coalesce(f.INSTANCE_NAME, '-') when coalesce(ff.INSTANCE_NAME, '-') then 'true' else 'false' end as INSTANCE_NAME , case coalesce(f.LAST_CHECKIN_TIME, -1) when coalesce(ff.LAST_CHECKIN_TIME, -1) then 'true' else 'false' end as LAST_CHECKIN_TIME , case coalesce(f.CHECKIN_INTERVAL, -1) when coalesce(ff.CHECKIN_INTERVAL, -1) then 'true' else 'false' end as CHECKIN_INTERVAL  from ( select * from lion_dw_tmp.activiti_pro_qrtz_scheduler_state where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_qrtz_scheduler_state where dt = '2023-03-26') ff on  f.sched_name = ff.sched_name and f.instance_name = ff.instance_name ) filter where  filter.SCHED_NAME = 'false' or filter.INSTANCE_NAME = 'false' or filter.LAST_CHECKIN_TIME = 'false' or filter.CHECKIN_INTERVAL = 'false' 
union
select 'qrtz_triggers', count(1) as diff from ( select  case coalesce(f.SCHED_NAME, '-') when coalesce(ff.SCHED_NAME, '-') then 'true' else 'false' end as SCHED_NAME , case coalesce(f.TRIGGER_NAME, '-') when coalesce(ff.TRIGGER_NAME, '-') then 'true' else 'false' end as TRIGGER_NAME , case coalesce(f.TRIGGER_GROUP, '-') when coalesce(ff.TRIGGER_GROUP, '-') then 'true' else 'false' end as TRIGGER_GROUP , case coalesce(f.JOB_NAME, '-') when coalesce(ff.JOB_NAME, '-') then 'true' else 'false' end as JOB_NAME , case coalesce(f.JOB_GROUP, '-') when coalesce(ff.JOB_GROUP, '-') then 'true' else 'false' end as JOB_GROUP , case coalesce(f.DESCRIPTION, '-') when coalesce(ff.DESCRIPTION, '-') then 'true' else 'false' end as DESCRIPTION , case coalesce(f.NEXT_FIRE_TIME, -1) when coalesce(ff.NEXT_FIRE_TIME, -1) then 'true' else 'false' end as NEXT_FIRE_TIME , case coalesce(f.PREV_FIRE_TIME, -1) when coalesce(ff.PREV_FIRE_TIME, -1) then 'true' else 'false' end as PREV_FIRE_TIME , case coalesce(f.PRIORITY, -1) when coalesce(ff.PRIORITY, -1) then 'true' else 'false' end as PRIORITY , case coalesce(f.TRIGGER_STATE, '-') when coalesce(ff.TRIGGER_STATE, '-') then 'true' else 'false' end as TRIGGER_STATE , case coalesce(f.TRIGGER_TYPE, '-') when coalesce(ff.TRIGGER_TYPE, '-') then 'true' else 'false' end as TRIGGER_TYPE , case coalesce(f.START_TIME, -1) when coalesce(ff.START_TIME, -1) then 'true' else 'false' end as START_TIME , case coalesce(f.END_TIME, -1) when coalesce(ff.END_TIME, -1) then 'true' else 'false' end as END_TIME , case coalesce(f.CALENDAR_NAME, '-') when coalesce(ff.CALENDAR_NAME, '-') then 'true' else 'false' end as CALENDAR_NAME , case coalesce(f.MISFIRE_INSTR, -1) when coalesce(ff.MISFIRE_INSTR, -1) then 'true' else 'false' end as MISFIRE_INSTR , case coalesce(f.JOB_DATA, '-') when coalesce(ff.JOB_DATA, '-') then 'true' else 'false' end as JOB_DATA  from ( select * from lion_dw_tmp.activiti_pro_qrtz_triggers where dt = '2023-03-26') f left join ( select * from lion_dw_test.activiti_core_qrtz_triggers where dt = '2023-03-26') ff on  f.sched_name = ff.sched_name and f.trigger_name = ff.trigger_name and f.trigger_group = ff.trigger_group ) filter where  filter.SCHED_NAME = 'false' or filter.TRIGGER_NAME = 'false' or filter.TRIGGER_GROUP = 'false' or filter.JOB_NAME = 'false' or filter.JOB_GROUP = 'false' or filter.DESCRIPTION = 'false' or filter.NEXT_FIRE_TIME = 'false' or filter.PREV_FIRE_TIME = 'false' or filter.PRIORITY = 'false' or filter.TRIGGER_STATE = 'false' or filter.TRIGGER_TYPE = 'false' or filter.START_TIME = 'false' or filter.END_TIME = 'false' or filter.CALENDAR_NAME = 'false' or filter.MISFIRE_INSTR = 'false' or filter.JOB_DATA = 'false' 
